var imgA;
var imgB;

function setup() {
  createCanvas(512, 512);
  background(255);
  imgA = createImage(512, 512);
  imgB = createImage(512, 512);
  imgA.loadPixels();
  imgB.loadPixels();
  var d = pixelDensity();
  for (var i = 0; i < 512 * 512 * 4 * d; i += 4) {
    imgA.pixels[i] = 240;
    imgA.pixels[i + 1] = 250;
    imgA.pixels[i + 2] = 240;
    imgA.pixels[i + 3] = 255;
    imgB.pixels[i] = 240;
    imgB.pixels[i + 1] = 240;
    imgB.pixels[i + 2] = 250;
    imgB.pixels[i + 3] = 255;
  }
  imgA.updatePixels();
  imgB.updatePixels();
}

function draw() {
  if (!keyIsDown(32)) {
    image(imgA, 0, 0);
    text("Image A", 10, 20);
  } else {
    image(imgB, 0, 0);
    text("Image B", 10, 20);
  }
}

function makeVector(x, y) {
  return [x, y, 1];
}

function makeIdentity() {
  return [
    [1, 0, 0],
    [0, 1, 0],
    [0, 0, 1],
  ];
}

function makeTranslation(x, y) {
  return [
    [1, 0, x],
    [0, 1, y],
    [0, 0, 1],
  ];
}

function makeScale(x, y) {
  return [
    [x, 0, 0],
    [0, y, 0],
    [0, 0, 1],
  ];
}

function makeRotation(angle) {
  angle = radians(angle);
  return [
    [cos(angle), -sin(angle), 0],
    [sin(angle), cos(angle), 0],
    [0, 0, 1],
  ];
}

function makeShear(x, y) {
  return [
    [1, x, 0],
    [y, 1, 0],
    [0, 0, 1],
  ];
}

function multiplyVector(matrix, vector) {
  let result = [0, 0, 0];
  for (let i = 0; i < 3; i++) {
    result[i] = 0;
    for (let j = 0; j < 3; j++) {
      result[i] += matrix[i][j] * vector[j];
    }
  }
  return result;
}

function multiplyMatrix(matrixA, matrixB) {
  let result = makeIdentity();
  for (let i = 0; i < 3; i++) {
    result[i] = [0, 0, 0];
    for (let j = 0; j < 3; j++) {
      result[i][j] = 0;
      for (let k = 0; k < 3; k++) {
        result[i][j] += matrixA[i][k] * matrixB[k][j];
      }
    }
  }
  return result;
}

function drawVector(img, vec) {
  img.set(vec[0], vec[1], color(255, 0, 0));
  img.updatePixels();
}

function mouseDragged() {
  let vector = makeVector(mouseX, mouseY);
  let translation = makeTranslation(10, 10);
  let identity = makeIdentity();
  let scale = makeScale(2, 2);
  let rotation = makeRotation(45);
  let shear = makeShear(0.5, 0.5);
  let transformationA = multiplyMatrix(
    translation,
    multiplyMatrix(rotation, scale),
  );
  let transformationB = multiplyMatrix(
    scale,
    multiplyMatrix(translation, rotation),
  );

  let transformedVectorA = multiplyVector(transformationA, vector);
  let transformedVectorB = multiplyVector(transformationB, vector);

  drawVector(imgA, transformedVectorA);
  drawVector(imgB, transformedVectorB);
}
